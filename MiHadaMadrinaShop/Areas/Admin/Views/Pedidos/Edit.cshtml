@model MiHadaMadrinaShop.Models.Pedido
@inject MiHadaMadrinaHandMadeDBContext _context;

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var listaEstados = _context.Estados.ToList();
    List<TCestum> listaCestas = _context.TCesta.Where(q => q.IdPedido.Equals(Model.IdPedido)).ToList();
    Direccione direccionDomicilio = (Direccione)_context.Direcciones.Where(q => q.IdDireccion.Equals(Model.IdDireccionDomicilio)).FirstOrDefault();
    Direccione direccionFacturacion = (Direccione)_context.Direcciones.Where(q => q.IdDireccion.Equals(Model.IdDireccionFacturacion)).FirstOrDefault();
    var userId = listaCestas.FirstOrDefault().IdAppNetUsers;
    AspNetUser user = _context.AspNetUsers.Where(q => q.Id.Equals(userId)).FirstOrDefault();
}

<h1>Edit</h1>

<h4>Pedido</h4>
<hr />
<div class="row">
    <div class="col-md-4">

        <dl class="row">
            <dt class="col-sm-2">
                Número de pedido
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.IdPedido)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.FechaPedido)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FechaPedido)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.FechaEnvio)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FechaEnvio)
            </dd>
            <dt class="col-sm-2">
                Cliente
            </dt>
            <dd class="col-sm-10">
                @user.Nombre<br />
                @user.Apellidos<br />
                @user.Dni<br />
                @user.Email<br />
                @user.PhoneNumber<br />
            </dd>
            <dt class="col-sm-2">
                Dirección de domicilio
            </dt>
            <dd class="col-sm-10">
                @direccionDomicilio.Direccion<br />
                @direccionDomicilio.CodPostal<br />
                @direccionDomicilio.Localidad<br />
                @direccionDomicilio.Provincia<br />
                @direccionDomicilio.Pais<br />
            </dd>
            <dt class="col-sm-2">
                Dirección de facturación
            </dt>
            <dd class="col-sm-10">
                @direccionFacturacion.Direccion<br />
                @direccionFacturacion.CodPostal<br />
                @direccionFacturacion.Localidad<br />
                @direccionFacturacion.Provincia<br />
                @direccionFacturacion.Pais<br />
            </dd>

        </dl>

        @*Productos*@
        <table class="table">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th>Cantidad</th>
                    <th>Precio</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in listaCestas)
                    {
                        <tr>
                            <td>@_context.Productos.Where(q=>q.IdProducto.Equals(item.IdProducto)).FirstOrDefault().Nombre</td>
                            <td>@item.Cantidad</td>
                            <td>@_context.Productos.Where(q=>q.IdProducto.Equals(item.IdProducto)).FirstOrDefault().PrecioConDescuento€</td>
                            <td>@item.Total€</td>
                        </tr>

                    }
                }
            </tbody>
        </table>

        <br />
        <dl class="row">


            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TotalSinIva)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.TotalSinIva)€
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Iva)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Iva)%
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Total)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Total)€
            </dd>

        </dl>

    </div>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdPedido" />
            
        <div class="form-group">
            <label asp-for="IdEstado" class="control-label">Estado del pedido</label>
            <select asp-for="IdEstado" class="form-control">
                @{
                    foreach (var estado in listaEstados)
                    {
                        <option value="@estado.IdEstado">@estado.Estado1 </option>
                    }
                }

            </select>
        </div>


            <div class="form-group">
                <label asp-for="FechaEnvio" class="control-label"></label>
                <input asp-for="FechaEnvio" class="form-control" />
                <span asp-validation-for="FechaEnvio" class="text-danger"></span>
            </div>

        <div class="form-group">
            <label asp-for="IdAspNetUsers" class="control-label" hidden="hidden"></label>
            <input asp-for="IdAspNetUsers" class="form-control" hidden="hidden" />
            <span asp-validation-for="IdAspNetUsers" class="text-danger"></span>
        </div>
            
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>

<div>
    <a asp-action="Index">Volver</a>
</div>

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
*@