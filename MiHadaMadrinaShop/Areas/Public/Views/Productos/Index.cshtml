@using MiHadaMadrinaShop.Models.ViewModels;
@using Microsoft.AspNetCore.Identity
@model PaginatedList<MiHadaMadrinaShop.Models.Producto>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Tienda</h1>

@*Buscador*@
@using (Html.BeginForm())
{
    <p>
        Buscar por producto: @Html.TextBox("searchString")
        <input type="submit" value="Search" />
    </p>
}

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-3">
            <div class="card" style="width: 18rem;">
                <div class="row p-2 bg-white border rounded">
                    <img src="~/img/productos/@item.ImagenUrl" class="card-img-top imagen-tienda" alt="imagen del producto" />


                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Nombre)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.DescripcionCorta)</p>
                        <h4 class="card-text"> @Html.DisplayFor(modelItem => item.PrecioConDescuento)</h4>&nbsp;<span class="strike-text">@Html.DisplayFor(modelItem => item.Precio)</span>
                    </div>

                    <div class="card-footer">
                        <a class="btn btn-secondary btn-sm mt-2" asp-action="Detalles" asp-route-id="@item.IdProducto">Detalles</a>
                        @{
                            if (User.Identity.IsAuthenticated)
                            {
                                var user = await UserManager.GetUserAsync(User);
                                var roles = await UserManager.GetRolesAsync(user);

                                if (roles.Contains("Public"))
                                {
                                    <a class="btn btn-outline-primary btn-sm mt-2" asp-controller="TCestums" asp-action="AddProductToCart" asp-route-id="@item.IdProducto">A&ntilde;adir a la cesta</a>
                                }
                                else
                                {
                                    <a class="btn btn-secondary btn-sm mt-2">A&ntilde;adir a la cesta<br>Debes iniciar sesión</a>
                                }
                            }
                            else
                            {
                                <a class="btn btn-secondary btn-sm mt-2">A&ntilde;adir a la cesta<br>Debes iniciar sesión</a>
                            }


                        }

                    </div>
                </div>
            </div>
        </div>
    }

</div>
<br />
<div class="text-center">


    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Anterior
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Siguiente
    </a>

</div>













@*<div class="container mt-5 mb-5">
    <div class="d-flex justify-content-center row">
        <div class="col-md-10">

            @foreach (var item in Model)
            {

                <div class="row p-2 bg-white border rounded">
                    <div class="col-md-3 mt-1"> <img src="~/img/@item.ImagenUrl" style="width:75px;height:75px;" /></div>
                    <div class="col-md-6 mt-1">
                        <h5>@Html.DisplayFor(modelItem => item.Nombre)</h5>

                        <div class="mt-1 mb-1 spec-1">@Html.DisplayFor(modelItem => item.DescripcionCorta)</div>
                        <p class="text-justify text-truncate para mb-0">@Html.DisplayFor(modelItem => item.DescripcionLarga)<br><br></p>
                    </div>
                    <div class="align-items-center align-content-center col-md-3 border-left mt-1">
                        <div class="d-flex flex-row align-items-center">
                            <h4 class="mr-1"> @Html.DisplayFor(modelItem => item.PrecioConDescuento)</h4>&nbsp;<span class="strike-text">@Html.DisplayFor(modelItem => item.Precio)</span>
                        </div>
                        <h6 class="text-success">Free shipping</h6>
                        <div class="d-flex flex-column mt-4">
                            <a class="btn btn-primary btn-sm" asp-action="Details" asp-route-id="@item.IdProducto">Detalles</a>
                            @{
                                if (User.Identity.IsAuthenticated)
                                {
                                    var user = await UserManager.GetUserAsync(User);
                                    var roles = await UserManager.GetRolesAsync(user);

                                    if (roles.Contains("Public"))
                                    {
                                        <a class="btn btn-outline-primary btn-sm mt-2" asp-controller="TCestums" asp-action="AddProductToCart" asp-route-id="@item.IdProducto">A&ntilde;adir a la cesta</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-secondary btn-sm mt-2">A&ntilde;adir a la cesta<br>Debes iniciar sesión</a>
                                    }
                                }
                                else
                                {
                                    <a class="btn btn-secondary btn-sm mt-2">A&ntilde;adir a la cesta<br>Debes iniciar sesión</a>
                                }


                            }

                        </div>
                    </div>
                </div>
                <br>

            }

        </div>
    </div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>*@


